import telebot
from telebot import types
import json
import sqlite3
import random as rn

bot = telebot.TeleBot('6019892545:AAGktOcqyIXrTIvxLUmJMKgnXMrtt4tKDkk')
lst = []

@bot.message_handler(commands=['start'])
def start(message):
    btn = types.InlineKeyboardMarkup()
    btn.add(types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data = 'hub'))
    bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! üßë‚Äçüç≥\n–°–ø–∞—Å–∏–±–æ, —á—Ç–æ —Ä–µ—à–∏–ª–∏ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞-—à–µ—Ñ-–ø–æ–≤–∞—Ä–∞ Personal Chef!ü•ó \n\n–ë–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —Ö–æ—á–µ—Ç —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å —Å–≤–æ–π —Ä–∞—Ü–∏–æ–Ω –∏–ª–∏ –Ω–∞—É—á–∏—Ç—å—Å—è –≥–æ—Ç–æ–≤–∏—Ç—å —á—Ç–æ-—Ç–æ –Ω–æ–≤–æ–µ.\n\n–ù–∞—à –±–æ—Ç —Ç–æ–ª—å–∫–æ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∏ –µ—â—ë –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏, –∏ –º—ã –±—É–¥–µ–º —Ä–∞–¥—ã, –µ—Å–ª–∏ –í—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ –æ—Ç–∑—ã–≤/–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ/–∂–∞–ª–æ–±—É –Ω–∞ –Ω–∞—à—É –ø–æ—á—Ç—É personal.chef.bot@gmail.com \n\nüçî' )
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç, —è —à–µ—Ñ-–±–æ—Ç Personal Chef\n\n–í –º–æ–µ–π –±–∞–∑–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –±–æ–ª–µ–µ 100 –±–ª—é–¥, —è —É–≤–µ—Ä–µ–Ω —á—Ç–æ —Å–º–æ–≥—É –ø–æ–º–æ—á—å –í–∞–º —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å –í–∞—à —Ä–∞—Ü–∏–æ–Ω.\n\n–ù–∞—á–Ω–µ–º?', reply_markup = btn)
    def data_add(us_data):
        """–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ json —Ñ–∞–π–ª"""
        with open ('usersData.json', 'r', encoding = 'utf-8') as f:
            lst = list(json.load(f))
            lst_id = []
            for user in lst:
                lst_id.append(user["ID"])
            if message.from_user.id not in lst_id:
                with open('usersData.json', 'w', encoding = 'utf-8') as f:
                    lst.append(user_data)
                    json.dump(lst, f, indent = 4, ensure_ascii = False)
    user_data = {
        'username': message.from_user.username,
        'first name': message.from_user.first_name,
        'last name': message.from_user.last_name,
        'ID': message.from_user.id
    }
    data_add(user_data)


@bot.message_handler(commands=['hub'])
def hub(message):
    file = open('./helloPhoto.jpg', 'rb')
    bot.send_photo(message.chat.id, file)
    btn = types.InlineKeyboardMarkup()
    btn.add(types.InlineKeyboardButton("–†–∞—Ü–∏–æ–Ω –Ω–∞ –¥–µ–Ω—å", callback_data = 'day_meal'))
    bot.send_message(message.chat.id, '–≠—Ç–æ <b>—Ö–∞–±</b>, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –æ–ø—Ü–∏—é üçéü§ó\n\n/help - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n\n –ù–∞—à —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!', parse_mode = 'html', reply_markup = btn)


@bot.callback_query_handler(func = lambda callback: True)
def callback_message(callback):
    """–§—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª–∏–∫–∞ –Ω–∞ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫"""
    if callback.data == 'hub':
        file = open('./helloPhoto.jpg', 'rb')
        bot.send_photo(callback.message.chat.id, file)
        btn = types.InlineKeyboardMarkup()
        btn.add(types.InlineKeyboardButton("–†–∞—Ü–∏–æ–Ω –Ω–∞ –¥–µ–Ω—å", callback_data = 'day_meal'))
        bot.send_message(callback.message.chat.id, '–≠—Ç–æ <b>—Ö–∞–±</b>, –∑–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â—É—é –í–∞—Å –æ–ø—Ü–∏—é üçéü§ó\n\n/help - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º –±–æ—Ç–∞\n\n–ù–∞—à —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è, —Å–ª–µ–¥–∏—Ç–µ –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º–∏!', parse_mode = 'html', reply_markup = btn)
    if callback.data == 'day_meal':
       btn = types.InlineKeyboardMarkup()
       br_id = str(rn.randint(1, 20))
       ln1_id = str(rn.randint(1, 20))
       ln2_id = str(rn.randint(21, 40))
       dn_id = str(rn.randint(1, 20))
       con = sqlite3.connect('FoodBase.db')
       cursor = con.cursor()
       cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM breakfast WHERE id = {br_id}')
       br_name, br_url, br_photo = cursor.fetchone()
       cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM lunch WHERE id = {ln1_id}')
       ln1_name, ln1_url, ln1_photo = cursor.fetchone()
       cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM lunch WHERE id = {ln2_id}')
       ln2_name, ln2_url, ln2_photo = cursor.fetchone()
       cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM dinner WHERE id = {dn_id}')
       dn_name, dn_url, dn_photo = cursor.fetchone()
       btn.add(types.InlineKeyboardButton(f'{br_name}', url = br_url))
       btn.add(types.InlineKeyboardButton(f'{ln1_name}', url = ln1_url))
       btn.add(types.InlineKeyboardButton(f'{ln2_name}', url = ln2_url))
       btn.add(types.InlineKeyboardButton(f'{dn_name}', url = dn_url))
       bot.send_media_group(callback.message.chat.id, [types.InputMediaPhoto(br_photo), types.InputMediaPhoto(ln1_photo),
                                              types.InputMediaPhoto(ln2_photo), types.InputMediaPhoto(dn_photo)])
       bot.send_message(callback.message.chat.id, f'‚òïÔ∏èü•™<u><b>–ó–∞–≤—Ç—Ä–∞–∫</b></u>: {br_name}\n\nüç≤üçû<u><b>–ü–µ—Ä–≤–æ–µ –Ω–∞ –æ–±–µ–¥</b></u>: {ln1_name}\n\nü•òüßÜ<u><b>–í—Ç–æ—Ä–æ–µ –Ω–∞ –æ–±–µ–¥</b></u>: {ln2_name}\n\nüçΩüçö<u><b>–£–∂–∏–Ω</b></u>: {dn_name}', parse_mode = 'html', reply_markup = btn)


@bot.message_handler(commands=['full_meal']) 
def full_m(message):
    btn = types.InlineKeyboardMarkup()
    br_id = str(rn.randint(1, 20))
    ln1_id = str(rn.randint(1, 20))
    ln2_id = str(rn.randint(21, 40))
    dn_id = str(rn.randint(1, 20))
    con = sqlite3.connect('FoodBase.db')
    cursor = con.cursor()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM breakfast WHERE id = {br_id}')
    br_name, br_url, br_photo = cursor.fetchone()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM lunch WHERE id = {ln1_id}')
    ln1_name, ln1_url, ln1_photo = cursor.fetchone()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM lunch WHERE id = {ln2_id}')
    ln2_name, ln2_url, ln2_photo = cursor.fetchone()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM dinner WHERE id = {dn_id}')
    dn_name, dn_url, dn_photo = cursor.fetchone()
    btn.add(types.InlineKeyboardButton(f'{br_name}', url = br_url))
    btn.add(types.InlineKeyboardButton(f'{ln1_name}', url = ln1_url))
    btn.add(types.InlineKeyboardButton(f'{ln2_name}', url = ln2_url))
    btn.add(types.InlineKeyboardButton(f'{dn_name}', url = dn_url))
    bot.send_media_group(message.chat.id, [types.InputMediaPhoto(br_photo), types.InputMediaPhoto(ln1_photo),
                                           types.InputMediaPhoto(ln2_photo), types.InputMediaPhoto(dn_photo)])
    bot.send_message(message.chat.id, f'‚òïÔ∏èü•™<u><b>–ó–∞–≤—Ç—Ä–∞–∫</b></u>: {br_name}\n\nüç≤üçû<u><b>–ü–µ—Ä–≤–æ–µ –Ω–∞ –æ–±–µ–¥</b></u>: {ln1_name}\n\nü•òüßÜ<u><b>–í—Ç–æ—Ä–æ–µ –Ω–∞ –æ–±–µ–¥</b></u>: {ln2_name}\n\nüçΩüçö<u><b>–£–∂–∏–Ω</b></u>: {dn_name}', parse_mode = 'html', reply_markup = btn)

@bot.message_handler(commands=['breakfast'])
def breakfast(message):
    btn = types.InlineKeyboardMarkup()
    br_id = str(rn.randint(1, 20))
    con = sqlite3.connect('FoodBase.db')
    cursor = con.cursor()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM breakfast WHERE id = {br_id}')
    br_name, br_url, br_photo = cursor.fetchone()
    btn.add(types.InlineKeyboardButton(f'{br_name}', url = br_url))
    bot.send_photo(message.chat.id, br_photo)
    bot.send_message(message.chat.id, f'‚òïÔ∏èü•™<u><b>–ó–∞–≤—Ç—Ä–∞–∫</b></u>: {br_name}', parse_mode = 'html', reply_markup = btn)


@bot.message_handler(commands=['lunch'])
def lunch(message):
    btn = types.InlineKeyboardMarkup()
    ln_id = str(rn.randint(1, 40))
    con = sqlite3.connect('FoodBase.db')
    cursor = con.cursor()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM lunch WHERE id = {ln_id}')
    ln_name, ln_url, ln_photo = cursor.fetchone()
    btn.add(types.InlineKeyboardButton(f'{ln_name}', url = ln_url))
    bot.send_photo(message.chat.id, ln_photo)
    bot.send_message(message.chat.id, f'üç≤ü•ò<u><b>–û–±–µ–¥</b></u>: {ln_name}', parse_mode = 'html', reply_markup = btn)


@bot.message_handler(commands=['dinner'])
def dinner(message):
    btn = types.InlineKeyboardMarkup()
    dn_id = str(rn.randint(1,20))
    con = sqlite3.connect('FoodBase.db')
    cursor = con.cursor()
    cursor.execute(f'SELECT –ù–∞–∑–≤–∞–Ω–∏–µ, url, photo_url FROM dinner WHERE id = {dn_id}')
    dn_name, dn_url, dn_photo = cursor.fetchone()
    btn.add(types.InlineKeyboardButton(f'{dn_name}', url = dn_url))
    bot.send_photo(message.chat.id, dn_photo)
    bot.send_message(message.chat.id, f'üçΩ<u><b>–£–∂–∏–Ω</b></u>: {dn_name}', parse_mode = 'html', reply_markup = btn)


@bot.message_handler(commands=['random'])
def random(message):
    category = rn.randint(1, 3)
    if category == 1:
        breakfast(message)
    if category == 2:
        lunch(message)
    if category == 3:
        dinner(message)


@bot.message_handler(commands=['help'])
def help(message):
    bot.send_message(message.chat.id, f'–í–æ—Ç –∫–æ–º–º–∞–Ω–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:\n\n/hub - –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ö–∞–±\n/full_meal - —Ä–∞—Ü–∏–æ–Ω –Ω–∞ –¥–µ–Ω—å\n/breakfast - –∑–∞–≤—Ç—Ä–∞–∫\n/lunch - –æ–±–µ–¥(–ø–µ—Ä–≤–æ–µ –∏ –≤—Ç–æ—Ä–æ–µ)\n/dinner - —É–∂–∏–Ω\n\n/random - —Å–ª—É—á–∞–π–Ω–æ–µ –±–ª—é–¥–æ –∏–∑ –ª—é–±–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏')


@bot.message_handler()
def info(message):
    if message.text.lower() == '–ø—Ä–∏–≤–µ—Ç':
        bot.send_message(message.chat.id, f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name} üçù!\n\n–ß—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç?\n\n/help - –ø–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º' )
    elif message.text.lower() == '–∑–∞–≤—Ç—Ä–∞–∫':
        breakfast(message)
    elif message.text.lower() == '–æ–±–µ–¥':
        lunch(message)
    elif message.text.lower() == '—É–∂–∏–Ω':
        dinner(message)

bot.infinity_polling()
